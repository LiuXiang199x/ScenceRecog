# coding:utf-8

from fileinput import filename
import os
from pydoc import TextRepr
from re import I
from unittest import result


def get_dic():
    file_dataset = open("txt_final.txt")
    sn_file = open("./数据获取/sn_total.txt")

    sn_total = []
    url_total = []

    datas_url = file_dataset.readlines()
    datas_sn = sn_file.readlines()

    file_dataset.close()
    sn_file.close()

    for item in datas_sn:
        item = item.replace("\n", "")
        sn_total.append(item) 

    for item in datas_url:
        item = item.replace("\n", "")
        url_total.append(item) 

    final_img = {}
    counter_time = 0
    for data_sn in datas_sn:
        counter = 0
        data_sn = data_sn.replace("\n", "")    
        for i in datas_url:
            i = i.replace("\n", "")
            # print(i)
            if data_sn in i:
                counter += 1
        if counter != 0:
            final_img[data_sn] = counter
            counter_time += 1
            print("=======> estamos en seq: ", counter_time)

    return final_img

def get_140sn():
    # result = get_dic()
    result = {'010102104301117': 56701, '010102104221019': 120353, '010102104221016': 72837, '010102104301125': 45555, '010102104221011': 79889, '010102104301107': 39216, '010102104301112': 43445, '010102104221009': 53079, '010102104301109': 35146, '010102104221024': 33794, '010102104301122': 27507, '010102104221028': 48127, '010102104221018': 40323, '010102104221029': 88533, '010102104221026': 19789, '010102104301116': 33438, '010102104301129': 28276, '010102104221007': 21649, '010102104301108': 29016, '010102104301114': 59965, '29984CRL30V00000172': 24770, '010102104221004': 33642, '010102104221030': 20904, '29984CRL30V00000159': 30247, '010102104221002': 28430, '010102104301110': 16574, '010102104221008': 11182, '010102104301124': 21417, '010102104221023': 20106, '010102104301104': 18050, '010102104301127': 28475, '542500000112': 24802, '010102104301118': 25486, '010102104301115': 30597, '010102104221001': 28482, '010102104221006': 20178, '010102104221012': 13330, '010102104301103': 7230, '010102104221013': 18700, '542500000127': 13218, '010102104301113': 6669, '542500000064': 4515, '010102104301126': 3531, '542500000789': 15636, '542500001552': 5426, '010102104221020': 31120, 'CRL30VDJ208Z2081': 11439, '542500001118': 10547, '375468222': 2820, '010102104221022': 2789, 'CRL30VDJ208Z2107': 5189, '542500000129': 5012, '010102104301102': 6433, '542500001169': 4022, '542500000054': 5666, 'CRL30VDJ208Z2071': 5545, '2998499999275': 2052, 'CRL30VDJ208Z2063': 2468, '542500000074': 2400, '542500000133': 2759, '542500000102': 4624, '542500001364': 5667, '010102104301111': 4570, '542500000135': 4867, '010102104301119': 6645, 'CRL30VDJ208Z2061': 1104, 'CRL30VDJ208Z2125': 2880, '542500005687': 5010, '542500000758': 680, '542500000070': 6209, '010102104301101': 1003, '542500001496': 1414, 'CRL30VDJ208Z2072': 6348, '542500001344': 1743, '542500000058': 2100, '542500000186': 4066, '542500000111': 1243, '542500000092': 2600, '542500001219': 209, 'CRL30VDJ7B0014': 722, 'CRL30VDJ208Z2144': 5, '29984CRL30V00000162': 266, '010102104301130': 2625, '010102104221027': 55204, '29984CRL30V00067535': 1, '29984CRL30V00066213': 24958, '29984CRL30V00066816': 40734, '29984CRL30V00060763': 4216, '29984CRL30V00061910': 77238, '29984CRL30V00061993': 81303, '29984CRL30V00062553': 35851, '29984CRL30V00066363': 39333, '29984CRL30V00065426': 59070, '29984CRL30V00061070': 107767, '29984CRL30V00066664': 9995, '29984CRL30V00065753': 10527, '29984CRL30V00065442': 70931, '29984CRL30V00066676': 12620, '29984CRL30V00066384': 17589, '29984CRL30V00066163': 48701, '29984CRL30V00066666': 74194, '29984CRL30V00065502': 66811, '29984CRL30V00067034': 23418, '29984CRL30V00067409': 89732, '29984CRL30V00067406': 26634, '29984CRL30V00067130': 59597, '29984CRL30V00067405': 73946, '29984CRL30V00067416': 37843, '29984CRL30V00066802': 48911, '29984CRL30V00066208': 95719, '29984CRL30V00066715': 26457, '29984CRL30V00065750': 38707, '29984CRL30V00066318': 25957, '29984CRL30V00064960': 23242, '29984CRL30V00065052': 26099, '29984CRL30V00064965': 40374, '29984CRL30V00067432': 54235, '29984CRL30V00065749': 95279, '29984CRL30V00066387': 63128, '29984CRL30V00067128': 53067, '29984CRL30V00064956': 93799, '29984CRL30V00066916': 84599, '29984CRL30V00064975': 54509, '29984CRL30V00066779': 82696, '29984CRL30V00066812': 19785, '29984CRL30V00067440': 25292, '29984CRL30V00061919': 70409, '29984CRL30V00064970': 83238, '29984CRL30V00060791': 42952, '29984CRL30V00066364': 42581, '29984CRL30V00066672': 14691, '29984CRL30V00066988': 33799, '29984CRL30V00067129': 29073, '29984CRL30V00067421': 64770, '29984CRL30V00066235': 101584, '29984CRL30V00067087': 41495, '29984CRL30V00066212': 49200, '29984CRL30V00066215': 18466, '29984CRL30V00065436': 58481, '29984CRL30V00054394': 35460, '29984CRL30V00066807': 76589, '29984CRL30V00067122': 6712, '29984CRL30V00067442': 35397, '542500000104': 2025, '542500002060': 1509, '542500000525': 925, '542500002120': 728, '542500001557': 1296, '542500001646': 1260, 'CRL30VDJ208Z2129': 3410, '29984CRL30V00066210': 25504, '29984CRL30V00005304': 77507, '29984CRL30V00066669': 47565, '2998499999335': 700, '542500001097': 417, 'CRL30VDJ7B0042': 48, '542500000995': 28, 'CRL30VDJ208Z2023': 17, 'CRL30VDJ7B0036': 1367, '542500001124': 4, '29984CRL30V00005521': 54126, '29984CRL30V00014262': 28780, '29984CRL30V00066993': 20034, '29984CRL30V00016156': 19515, '29984CRL30V00061966': 19422, '29984CRL30V00043040': 18218, '29984CRL30V00007664': 15154, '542500001619': 3481, '29984CRL30V00011786': 3429, '29984CRL30V00056343': 2289, '542500002038': 15}

    print(len(result))

    tmp_result = {}
    tmp_result2 = {}
    # print(sorted(result.values()))
    for item in result.keys():
        if result[item] > 2600:
            tmp_result[item] = result[item]
        elif result[item] > 0 and result[item] <=2600:
            tmp_result2[item] = result[item]

    print(len(tmp_result))
    print(len(tmp_result2))
    print(tmp_result2.keys())
    
    
#small ：['2998499999275', 'CRL30VDJ208Z2063', '542500000074', 'CRL30VDJ208Z2061', '542500000758', '010102104301101', '542500001496', '542500001344', '542500000058', '542500000111', '542500000092', '542500001219', 'CRL30VDJ7B0014', 'CRL30VDJ208Z2144', '29984CRL30V00000162', '29984CRL30V00067535', '542500000104', '542500002060', '542500000525', '542500002120', '542500001557', '542500001646', '2998499999335', '542500001097', 'CRL30VDJ7B0042', '542500000995', 'CRL30VDJ208Z2023', 'CRL30VDJ7B0036', '542500001124', '29984CRL30V00056343', '542500002038']
def save_140sntxt_originals():
    sn = ['010102104301117', '010102104221019', '010102104221016', '010102104301125', '010102104221011', '010102104301107', '010102104301112', '010102104221009', '010102104301109', '010102104221024', '010102104301122', '010102104221028', '010102104221018', '010102104221029', '010102104221026', '010102104301116', '010102104301129', '010102104221007', '010102104301108', '010102104301114', '29984CRL30V00000172', '010102104221004', '010102104221030', '29984CRL30V00000159', '010102104221002', '010102104301110', '010102104221008', '010102104301124', '010102104221023', '010102104301104', '010102104301127', '542500000112', '010102104301118', '010102104301115', '010102104221001', '010102104221006', '010102104221012', '010102104301103', '010102104221013', '542500000127', '010102104301113', '542500000064', '010102104301126', '542500000789', '542500001552', '010102104221020', 'CRL30VDJ208Z2081', '542500001118', '375468222', '010102104221022', 'CRL30VDJ208Z2107', '542500000129', '010102104301102', '542500001169', '542500000054', 'CRL30VDJ208Z2071', '542500000133', '542500000102', '542500001364', '010102104301111', '542500000135', '010102104301119', 'CRL30VDJ208Z2125', '542500005687', '542500000070', 'CRL30VDJ208Z2072', '542500000186', '010102104301130', '010102104221027', '29984CRL30V00066213', '29984CRL30V00066816', '29984CRL30V00060763', '29984CRL30V00061910', '29984CRL30V00061993', '29984CRL30V00062553', '29984CRL30V00066363', '29984CRL30V00065426', '29984CRL30V00061070', '29984CRL30V00066664', '29984CRL30V00065753', '29984CRL30V00065442', '29984CRL30V00066676', '29984CRL30V00066384', '29984CRL30V00066163', '29984CRL30V00066666', '29984CRL30V00065502', '29984CRL30V00067034', '29984CRL30V00067409', '29984CRL30V00067406', '29984CRL30V00067130', '29984CRL30V00067405', '29984CRL30V00067416', '29984CRL30V00066802', '29984CRL30V00066208', '29984CRL30V00066715', '29984CRL30V00065750', '29984CRL30V00066318', '29984CRL30V00064960', '29984CRL30V00065052', '29984CRL30V00064965', '29984CRL30V00067432', '29984CRL30V00065749', '29984CRL30V00066387', '29984CRL30V00067128', '29984CRL30V00064956', '29984CRL30V00066916', '29984CRL30V00064975', '29984CRL30V00066779', '29984CRL30V00066812', '29984CRL30V00067440', '29984CRL30V00061919', '29984CRL30V00064970', '29984CRL30V00060791', '29984CRL30V00066364', '29984CRL30V00066672', '29984CRL30V00066988', '29984CRL30V00067129', '29984CRL30V00067421', '29984CRL30V00066235', '29984CRL30V00067087', '29984CRL30V00066212', '29984CRL30V00066215', '29984CRL30V00065436', '29984CRL30V00054394', '29984CRL30V00066807', '29984CRL30V00067122', '29984CRL30V00067442', 'CRL30VDJ208Z2129', '29984CRL30V00066210', '29984CRL30V00005304', '29984CRL30V00066669', '29984CRL30V00005521', '29984CRL30V00014262', '29984CRL30V00066993', '29984CRL30V00016156', '29984CRL30V00061966', '29984CRL30V00043040', '29984CRL30V00007664', '542500001619', '29984CRL30V00011786']
    
    file_dataset = open("txt_final.txt")
    url_total = []
    datas_url = file_dataset.readlines()
    file_dataset.close()
    
    for item in sn:
        txt_path = "./数据获取/datasets/140sn_originals/" + item + ".txt"
        print(txt_path)

        file_140 = open(txt_path, "w")
        for i in datas_url:
            # i = i.replace("\n", "")
            if item in i:
                file_140.writelines(i)


def save_140sntxt_35w():
    root_path = "数据获取/datasets/140sn_originals/"
    for _, _, file_name in os.walk(root_path):
        txt_names = file_name
    
    for txt_file in txt_names:
        txt_path = root_path + txt_file
        
        datas = open(txt_path).readlines()
        gap_num = len(datas) // 2500
        tmp_file = open("数据获取/datasets/final_url.txt", "a")
        
        counter_loop = 0
        for seq in range(len(datas)):
            tmp_file.writelines(datas[seq])
            seq += gap_num
            counter_loop += 1

            if counter_loop == 2500:
                break

def save_140sntxt_35w():
    root_path = "数据获取/datasets/140sn_originals/"
    for _, _, file_name in os.walk(root_path):
        txt_names = file_name
    
    for txt_file in txt_names:
        txt_path = root_path + txt_file
        
        datas = open(txt_path).readlines()
        gap_num = len(datas) // 2500
        tmp_file = open("数据获取/datasets/final_url.txt", "a")
        
        counter_loop = 0
        for seq in range(len(datas)):
            tmp_file.writelines(datas[seq])
            seq += gap_num
            counter_loop += 1

            if counter_loop == 2500:
                break

def devide35to7():
    datas = open("数据获取/datasets/final_url.txt").readlines()
    
    f0 = open("数据获取/datasets/35Wto7paq/35_0(start_0).txt", "a")
    f1 = open("数据获取/datasets/35Wto7paq/35_1(start_1).txt", "a")
    f2 = open("数据获取/datasets/35Wto7paq/35_2(start_2).txt", "a")
    f3 = open("数据获取/datasets/35Wto7paq/35_3(start_3).txt", "a")
    f4 = open("数据获取/datasets/35Wto7paq/35_4(start_4).txt", "a")
    f5 = open("数据获取/datasets/35Wto7paq/35_5(start_5).txt", "a")
    f6 = open("数据获取/datasets/35Wto7paq/35_6(start_6).txt", "a")
    
    i = 0
    for _ in range(len(datas)):
        if i+6 >= len(datas):
            break
        f0.writelines(datas[i+0].split("/")[-1].replace("\t",""))
        f1.writelines(datas[i+1].split("/")[-1].replace("\t",""))
        f2.writelines(datas[i+2].split("/")[-1].replace("\t",""))
        f3.writelines(datas[i+3].split("/")[-1].replace("\t",""))
        f4.writelines(datas[i+4].split("/")[-1].replace("\t",""))
        f5.writelines(datas[i+5].split("/")[-1].replace("\t",""))
        f6.writelines(datas[i+6].split("/")[-1].replace("\t",""))
        
        i += 7

get_140sn()